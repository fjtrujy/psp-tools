name: CI

on:
  push:
  pull_request:
  repository_dispatch:
    types: [run_build]

jobs:
  build-docker:
    runs-on: ubuntu-latest
    container: ${{ matrix.os[0] }}:latest
    strategy:
      matrix:
        os: [[alpine, bash], [fedora, bash]]
    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies Alpine
      if: matrix.os[0] == 'alpine'
      run: |
        apk add build-base bash git autoconf automake python3 py3-pip cmake pkgconfig libarchive-dev openssl-dev libtool
    
    - name: Install dependencies Fedora
      if: matrix.os[0] == 'fedora'
      run: |
        dnf -y install @development-tools g++ wget git autoconf automake python3 python3-pip cmake pkgconf libarchive-devel openssl-devel libtool

    - name: Compile Tools
      run: |
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh

  build-VM:
    runs-on: ${{ matrix.os[0] }}
    strategy:
      matrix:
        os: [[macos-latest, bash], [macos-11, bash], [ubuntu-latest, bash], [windows-latest, msys2]]
    defaults:
     run:
      shell: ${{ matrix.os[1] }} {0}

    steps:
    - uses: actions/checkout@v2

    - name: Install on Ubuntu
      if: matrix.os[0] == 'ubuntu-latest'
      run: |
        sudo apt-get -y install libarchive-dev
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install Dependencies Mac
      if: startsWith( matrix.os[0], 'macos' )
      run: |
        brew install automake libarchive bash openssl libtool
        echo "MSYSTEM=x64" >> $GITHUB_ENV

    - name: Install in MSYS2
      if: matrix.os[0] == 'windows-latest'
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW32
        install: |
          base-devel git make texinfo flex bison patch binutils mingw-w64-i686-gcc mingw-w64-i686-dlfcn mingw-w64-i686-mpc 
          mingw-w64-i686-cmake
        update: true
        shell: msys2 {0}

    - name: Compile Tools
      run: |
        export PATH="/usr/local/opt/libtool/libexec/gnubin:$PATH"
        export PKG_CONFIG_PATH="/usr/local/opt/libarchive/lib/pkgconfig:/usr/local/opt/openssl@3/lib/pkgconfig"
        export PSPDEV=$PWD/pspdev
        export PATH=$PATH:$PSPDEV/bin
        ./build-all.sh